{"version":3,"sources":["Home/Home.js","AffirmationSelection/ListItemRight.js","AffirmationSelection/ListItemLeft.js","Player/Player.js","AffirmationSelection/ListItemDetail.js","AffirmationSelection/AffirmationSelection.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","a","className","to","Component","ListItemRight","this","selected","name","src","ListItemLeft","Player","controls","width","height","url","ListItemDetail","character","big_src","birthsign_src","title","quotes","map","e","key","AffirmationSelection","state","value","characters","undefined","setState","document","getElementById","addEventListener","ev","handleScrollMouse","old_element","new_element","cloneNode","parentNode","replaceChild","event","scrollTop","srcElement","clientHeight","scrollHeigth","scrollHeight","percentage","parseInt","target","scrollTo","index","id","length","i","onClick","selectAffirmation","type","min","max","onChange","handleScroll","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9755bbf4.chunk.js","sourcesContent":["import React, {Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  async componentDidMount() {\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-container-home\">\r\n        <div className=\"tophome\"></div>\r\n        <div className=\"contenthome\">\r\n        <div className=\"col-12 home h-100\">\r\n          <div className=\"menu  p-4 bgd\">\r\n            <div className=\"h1 col-12 py-3\">Hero's Awakening</div>\r\n            <Link to='/affirmation'> \r\n              <div className=\"h3 menu-button button-1 col-10 offset-2 py-2\">\r\n                <div className=\"icon\"></div>\r\n                <div className=\"h3\">Play</div>\r\n              </div>\r\n            </Link>\r\n            <div className=\"h3 menu-button button-2 col-10 offset-2 py-2\">\r\n              <div className=\"icon\"></div>\r\n              <div className=\"h3\">Settings</div>\r\n              </div>\r\n            <div className=\"h3 menu-button button-3 col-10 offset-2 py-2\">\r\n              <div className=\"icon\"></div>\r\n              <div className=\"h3\">Profile</div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"bottomhome\"></div>\r\n      </div>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component}  from 'react';\n\nclass ListItemRight extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n          <div className={`row minicontainer ${this.props.selected?'selected':''}`}>\n              <div className=\"col-md-5 col-sm-12 d-sm-block d-md-none d-lg-none\">\n                  <div className=\"minititle\">{this.props.name}</div>\n              </div>\n              <div className=\"col-md-7 col-sm-12 oh\">\n                  <img className=\"minipic\" src={this.props.src}></img>\n              </div>\n              <div className=\"col-md-5 col-sm-12 d-none d-md-block\">\n                  <div className=\"minititle\">{this.props.name}</div>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default ListItemRight;","import React, {Component}  from 'react';\n\nclass ListItemLeft extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n  }\n\n  render() {\n    return (\n        <div>\n          <div className={`row minicontainer ${this.props.selected?'selected':''}`}>\n            <div className=\"col-md-5 col-sm-12\">\n              <div className=\"minititle p-sm-3\">{this.props.name}</div>\n            </div>\n            <div className=\"col-md-7 col-sm-12 oh\">\n              <img className=\"minipic\" src={this.props.src}></img>\n            </div>\n          </div>\n        </div>\n     \n   \n    )\n  }\n}\n\nexport default ListItemLeft;","import React, {Component}  from 'react';\nimport ReactPlayer from 'react-player'\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n  }\n\n  render() {\n    return ( \n      <div className=\"grid-container-player\">\n        \n        <div className=\"topplayer\"></div>\n        <div className=\"contentplayer\">\n            <ReactPlayer\n        controls\n            className='react-player'\n            width=\"100%\"\n            height=\"100%\"\n            url='https://www.youtube.com/watch?v=x9LlDdqGxrA'\n            />\n        </div>\n        <div className=\"bottomplayer\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Player;","import React, {Component}  from 'react';\nimport { Link } from 'react-router-dom';\nimport Player from '../Player/Player';\n\nclass ListItemDetail extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n  }\n\n  render() {\n    if (!this.props.character) {\n      return <div></div>\n    }\n    return (\n        <div>\n            <div className=\"imgcontainer\">\n                <img className=\"detail_image\" src=\"/Images/Selection%20Page/birthsignborder.png\"></img>\n                <img className=\"detail_image o97\" src={this.props.character.big_src} ></img>\n                <img className=\"detail_image o15\" src=\"/Images/Selection%20Page/grungeoverlay-opacity15v2.png\" ></img>\n                <img className=\"detail_image o55\" src={this.props.character.birthsign_src} ></img>\n            </div>\n            <div className=\"quotecontainer\">\n                <div className=\"head\">{this.props.character.title} \n                  <img className=\"preview\" src=\"/Images/Selection%20Page/previewbutton-opacity95.png\" ></img>\n                </div>\n                {this.props.character.quotes.map(e => (\n                  <div className=\"quote\" key={e}>-{e}</div>\n                ))}\n            </div>\n\n            <div className=\"alignbottomright\">\n                <Link to=\"/video\">\n                  <div className=\"custombtn btn\">Select Birthsign</div>\n                </Link>\n            </div>\n        </div>\n        \n     \n   \n    )\n  }\n}\n\nexport default ListItemDetail;","import React, {Component}  from 'react';\r\nimport ListItemRight from './ListItemRight';\r\nimport ListItemLeft from './ListItemLeft';\r\nimport ListItemDetail from './ListItemDetail';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AffirmationSelection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: 0, characters: [], selected: undefined}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({characters: [\r\n      {\r\n        big_src: '/Images/Selection%20Page/lonewolfimage-opacity97v2.png',\r\n        birthsign_src: '/Images/Selection%20Page/lonewolfbirthsign-opacity55v2.png',\r\n        title: '\"I do things a bit differently\"',\r\n        quotes: ['Improve your self-confidence', 'Carve out your own path', 'Take ownership of your life'],\r\n        src: '/Images/Selection%20Page/lonewolfbirthsignmini.png',\r\n        name: 'Champion'\r\n        },\r\n        {\r\n        big_src: '/Images/Selection%20Page/lonewolfimage-opacity97v2.png',\r\n        birthsign_src: '/Images/Selection%20Page/lonewolfbirthsign-opacity55v2.png',\r\n        title: '\"I do things a bit differently\"',\r\n        quotes: ['Improve your self-confidence', 'Carve out your own path', 'Take ownership of your life'],\r\n        src: '/Images/Selection%20Page/lonewolfbirthsignmini.png',\r\n        name: 'Divinity'\r\n      },\r\n      {\r\n        big_src: '/Images/Selection%20Page/lonewolfimage-opacity97v2.png',\r\n        birthsign_src: '/Images/Selection%20Page/lonewolfbirthsign-opacity55v2.png',\r\n        title: '\"I do things a bit differently\"',\r\n        quotes: ['Improve your self-confidence', 'Carve out your own path', 'Take ownership of your life'],\r\n        src: '/Images/Selection%20Page/innerstrengthsignmini.png',\r\n        name: 'Lone Wolf'\r\n      },\r\n      {\r\n        big_src: '/Images/Selection%20Page/lonewolfimage-opacity97v2.png',\r\n        birthsign_src: '/Images/Selection%20Page/lonewolfbirthsign-opacity55v2.png',\r\n        title: '\"I do things a bit differently\"',\r\n        quotes: ['Improve your self-confidence', 'Carve out your own path', 'Take ownership of your life'],\r\n        src: '/Images/Selection%20Page/innerstrengthsignmini.png',\r\n        name: 'Inner Power'\r\n      }\r\n    ]})\r\n    document.getElementById('listcontainer').addEventListener('scroll', (ev) => this.handleScrollMouse(ev));\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    var old_element = document.getElementById(\"listcontainer\");\r\n    var new_element = old_element.cloneNode(true);\r\n    old_element.parentNode.replaceChild(new_element, old_element);\r\n  }\r\n\r\n  handleScrollMouse(event) {\r\n      let scrollTop = event.srcElement.scrollTop // 0 - 1800\r\n      let clientHeight = event.srcElement.clientHeight // 600\r\n      let scrollHeigth = event.srcElement.scrollHeight  // 2400\r\n\r\n      let percentage = parseInt((scrollTop / (scrollHeigth - clientHeight)) * 100);\r\n\r\n      this.setState({value: percentage})\r\n  }\r\n\r\n  handleScroll(event) {\r\n    let percentage = event.target.value;\r\n    let clientHeight = document.getElementById('listcontainer').clientHeight // 600\r\n    let scrollHeigth = document.getElementById('listcontainer').scrollHeight  // 2400\r\n    \r\n    let scrollTop = (percentage/100) * (scrollHeigth - clientHeight);\r\n    document.getElementById('listcontainer').scrollTo(0, scrollTop)\r\n\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  selectAffirmation(index) {\r\n    this.setState({selected: this.state.characters[index]})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <div className=\"topleft\"></div>\r\n        <div className=\"top\"></div>\r\n        <div className=\"topright\"></div>\r\n        <div className=\"left\"></div>\r\n        <div className=\"content container-fluid row\">\r\n          <div className=\"col-4 h-100 row\">\r\n          <div className=\"listcontainer\" id=\"listcontainer\">\r\n            {this.state.characters && this.state.characters.length > 0 && this.state.characters.map((e,i) => (\r\n              <div key={e.name + i} onClick={() => this.selectAffirmation(i)}>\r\n              {\r\n              i%2==0\r\n              ?\r\n              <ListItemLeft selected={this.state.selected && this.state.selected.name == e.name} src={e.src} name={e.name}/>\r\n              :\r\n              <ListItemRight selected={this.state.selected && this.state.selected.name == e.name} src={e.src} name={e.name}></ListItemRight>\r\n              }\r\n              {i==this.state.characters.length - 1 ? <div></div> : <hr className=\"ruler\"></hr>}\r\n              </div>\r\n            ))}\r\n          \r\n          </div>\r\n          <div className=\"scrollcontainer\">\r\n            <div className=\"scroller\">\r\n              <div className=\"scrollbar\" id=\"scrollbar\">\r\n                <div className=\"scrollbartop\"></div>\r\n                <div className=\"scrollbarbody\">\r\n                  <input \r\n                    type=\"range\" \r\n                    min=\"0\" \r\n                    max=\"100\"  \r\n                    value={this.state.value} \r\n                    onChange={(ev) => this.handleScroll(ev)}\r\n                    className=\"slider\" \r\n                    id=\"scrollbarbody\">\r\n                  </input>\r\n                </div>\r\n                <div className=\"scrollbarbottom\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-8 h-100\">\r\n            {this.state.selected && (\r\n              <ListItemDetail character={this.state.selected}></ListItemDetail>\r\n            )}\r\n            \r\n            <div className=\"aligntopright\">\r\n              <Link to='/'> \r\n                  <div className=\"backbtn\"></div>\r\n                </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\"></div>\r\n        <div className=\"bottomleft\"></div>\r\n        <div className=\"bottom\"></div>\r\n        <div className=\"bottomright\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AffirmationSelection;","import React, { Component } from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Home from './Home/Home'\r\nimport AffirmationSelection from './AffirmationSelection/AffirmationSelection'\r\nimport Player from './Player/Player';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Route exact path='/' component={Home}/>\r\n        <Route exact path='/affirmation' component={AffirmationSelection}/>\r\n        <Route exact path='/video' component={Player}/>\r\n        <Route exact path='/home' component={Home}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}